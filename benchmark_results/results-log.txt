Tue Mar 26 12:54:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1250
    max_iter: 1000
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 12:54:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1250
    max_iter: 1000
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 12:55:26 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 2m 52s
Best training loss: 0.001564

Tue Mar 26 12:58:54 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Tue Mar 26 13:16:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 13:19:05 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 200
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 24s
Best training loss: 0.136868

Tue Mar 26 13:20:02 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 50
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 500

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 13:21:19 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 200
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 500

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 13:21:54 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 500

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 13:22:45 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 500

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 13:23:20 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.8
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 7 
 Gamma = 0.1
Number of Epochs = 500

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 2m 0s
Best training loss: 0.252696

Tue Mar 26 13:28:21 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 13:28:41 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 24s
Best training loss: 0.129484

Tue Mar 26 13:29:28 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 400

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 1m 39s
Best training loss: 0.050925

Tue Mar 26 13:32:16 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 4000

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 17m 9s
Best training loss: 0.048608

Tue Mar 26 13:53:08 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 360 Validation Data = 40
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 4000

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 13:54:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 360 Validation Data = 40
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 4000

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 13:54:37 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 4000

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 16:29:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 4000

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 16:30:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 16:31:07 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 16:31:29 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 16:31:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 37s
Best training loss: 0.011727

Tue Mar 26 16:32:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 37s
Best training loss: 0.006808

Tue Mar 26 16:38:10 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 38s
Best training loss: 0.004489

Tue Mar 26 16:38:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 42s
Best training loss: 0.004165

Tue Mar 26 16:41:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 17:11:43 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 37s
Best training loss: 0.005615

Tue Mar 26 17:22:49 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 37s
Best training loss: 0.007135

Tue Mar 26 17:23:29 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 40s
Best training loss: 0.004085

Tue Mar 26 17:25:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 17:26:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 38s
Best training loss: 0.004543

Tue Mar 26 17:27:31 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 41s
Best training loss: 0.007121

Tue Mar 26 17:29:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 17:35:53 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 36s
Best training loss: 0.007231

Tue Mar 26 17:43:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 1.428859

Tue Mar 26 17:43:21 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 1.103404

Tue Mar 26 17:44:11 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 0.582164

Tue Mar 26 17:44:41 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 1.143686

Tue Mar 26 17:46:30 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 17:46:42 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 17:47:31 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 17:48:25 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 17:48:35 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 17:49:05 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 0.987169

Tue Mar 26 17:49:21 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 0.563121

Tue Mar 26 17:50:05 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 17:50:26 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 6s
Best training loss: 0.023384

Tue Mar 26 17:50:49 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 37s
Best training loss: 0.006199

Tue Mar 26 17:52:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 8
    max_iter: 7
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 2m 15s
Best training loss: 0.004479

Tue Mar 26 17:57:05 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 1
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 17:57:36 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 1
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 3s
Best training loss: 36.101285

Tue Mar 26 18:03:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 3m 40s
Best training loss: 0.001471

Tue Mar 26 18:08:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 6m 17s
Best training loss: 0.002149

Tue Mar 26 18:35:44 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Tue Mar 26 18:36:01 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 18:36:20 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 18:36:54 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 18:37:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 18:37:57 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 18:38:05 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 26 18:38:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 1m 2s
Best training loss: 0.005464

Wed Mar 27 10:19:31 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 10:51:08 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 10:51:37 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 10:52:25 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 10:52:43 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 10:55:41 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 27 10:55:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 0.332632

Wed Mar 27 10:56:49 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 1.978042

Wed Mar 27 10:57:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 20s
Best training loss: 0.522016

Wed Mar 27 10:57:41 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 20s
Best training loss: 1.016386

Wed Mar 27 10:58:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 18s
Best training loss: 0.328796

Wed Mar 27 10:58:39 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 17s
Best training loss: 0.652379

Wed Mar 27 10:59:57 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 21s
Best training loss: 2.183721

Wed Mar 27 11:08:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 25s
Best training loss: 0.572126

Wed Mar 27 11:10:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 11:10:31 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 37s
Best training loss: 0.006615

Wed Mar 27 11:12:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 37s
Best training loss: 0.005805

Wed Mar 27 11:13:37 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 2s
Best training loss: 0.476124

Wed Mar 27 11:15:20 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 2s
Best training loss: 0.358174

Wed Mar 27 11:15:45 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 2s
Best training loss: 0.413488

Wed Mar 27 11:17:11 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 37s
Best training loss: 0.004492

Wed Mar 27 11:26:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 3s
Best training loss: 0.054353

Wed Mar 27 11:26:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 29s
Best training loss: 0.009248

Wed Mar 27 11:29:02 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 27s
Best training loss: 0.008425

Wed Mar 27 11:32:07 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 33s
Best training loss: 0.019526

Wed Mar 27 11:33:26 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 27s
Best training loss: 0.020009

Wed Mar 27 11:34:42 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 25s
Best training loss: 0.009103

Wed Mar 27 11:35:23 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 25s
Best training loss: 0.009195

Wed Mar 27 11:37:53 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 25s
Best training loss: 0.008361

Wed Mar 27 11:39:09 2019
--------------------------------------------------
Filename: bnechmark_dataset/training.traj
Wed Mar 27 11:39:22 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Batch Size = 400
Training Data = 31
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 11:40:04 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Wed Mar 27 11:40:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Wed Mar 27 11:41:42 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Wed Mar 27 11:41:55 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Wed Mar 27 11:41:56 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Wed Mar 27 11:46:15 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Wed Mar 27 11:46:33 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Wed Mar 27 11:46:52 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Batch Size = 400
Training Data = 31
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 11:48:26 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Batch Size = 400
Training Data = 31
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 11:49:30 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Batch Size = 400
Training Data = 31
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 11:50:56 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Wed Mar 27 11:51:06 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Wed Mar 27 11:51:16 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Wed Mar 27 11:56:59 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Wed Mar 27 11:57:56 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Batch Size = 400
Training Data = 31
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 11:58:48 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Batch Size = 400
Training Data = 31
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 12:01:07 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Batch Size = 400
Training Data = 31
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 12:01:35 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Batch Size = 400
Training Data = 31
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 27 12:01:44 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Batch Size = 400
Training Data = 31
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 12:02:26 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Batch Size = 400
Training Data = 31
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 27 12:02:40 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Batch Size = 400
Training Data = 31
Wed Mar 27 12:02:52 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Batch Size = 400
Training Data = 31
Wed Mar 27 12:03:08 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Batch Size = 400
Training Data = 31
Wed Mar 27 12:04:20 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Wed Mar 27 12:09:44 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Batch Size = 400
Training Data = 2000
Wed Mar 27 12:10:02 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Batch Size = 400
Training Data = 2000
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 12:10:42 2019
--------------------------------------------------
Filename: benchmark_dataset/training.traj
Batch Size = 2000
Training Data = 2000
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 12:18:27 2019
Wed Mar 27 14:58:44 2019
Wed Mar 27 14:59:39 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 15:06:01 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 15:06:30 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 15:06:42 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 2s
Best training loss: 0.041159

Wed Mar 27 15:06:49 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 2s
Best training loss: 0.057426

Wed Mar 27 15:07:23 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 1
    max_iter: 1
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 2s
Best training loss: 0.075505

Wed Mar 27 15:07:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 15:09:07 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 15:09:21 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 19s
Best training loss: 0.009138

Wed Mar 27 15:10:04 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 19s
Best training loss: 0.008970

Wed Mar 27 15:12:36 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 5s
Best training loss: 0.729083

Wed Mar 27 15:12:45 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 15:13:02 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 19s
Best training loss: 0.011449

Wed Mar 27 15:13:44 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 15:14:11 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 15:14:22 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 19s
Best training loss: 0.008106

Wed Mar 27 15:15:19 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 19s
Best training loss: 0.024626

Wed Mar 27 15:21:54 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 27 15:22:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 27 15:22:31 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 27 15:23:32 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 27 15:24:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 27 15:51:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Wed Mar 27 15:51:27 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Wed Mar 27 15:51:42 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Wed Mar 27 15:51:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Wed Mar 27 15:56:36 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 18s
Best training loss: 0.004535

Wed Mar 27 15:57:25 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 27 16:29:27 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 5m 11s
Best training loss: 0.000943

Wed Mar 27 16:35:11 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 1m 38s
Best training loss: 0.001981

Wed Mar 27 16:37:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 150

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 2m 28s
Best training loss: 0.001784

Thu Mar 28 10:50:42 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 59s
Best training loss: 0.006077

Thu Mar 28 10:51:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.1
    max_eval: 3
    max_iter: 3
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 200

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 2m 1s
Best training loss: 0.003146

Thu Mar 28 10:56:37 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.01
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 10:56:59 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 2m 3s
Best training loss: 0.001255

Thu Mar 28 10:59:33 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 18
    max_iter: 15
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 11:01:36 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 18
    max_iter: 15
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 11:01:41 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 18
    max_iter: 15
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 11:01:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 18
    max_iter: 15
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 11:02:42 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 18
    max_iter: 15
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 11:02:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 18
    max_iter: 15
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 11:02:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 18
    max_iter: 15
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 11:06:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 1
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 3s
Best training loss: 100000000.000000

Thu Mar 28 11:07:09 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 3s
Best training loss: 0.285102

Thu Mar 28 11:07:33 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 27s
Best training loss: 0.056255

Thu Mar 28 11:08:23 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 26s
Best training loss: 0.034297

Thu Mar 28 11:09:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 28s
Best training loss: 0.027564

Thu Mar 28 11:18:49 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 18
    max_iter: 15
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 11:19:46 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 18
    max_iter: 15
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 11:24:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Thu Mar 28 11:24:20 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 2m 48s
Best training loss: 0.000811

Thu Mar 28 11:55:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: L1Loss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 11:56:06 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: L1Loss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 12:06:59 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: L1Loss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 12:07:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 12:08:23 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 12:08:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 36s
Best training loss: 0.000988

Thu Mar 28 12:12:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 48s
Best training loss: 0.000999

Thu Mar 28 12:14:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 44s
Best training loss: 0.000994

Thu Mar 28 12:15:18 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 2m 52s
Best training loss: 0.000990

Thu Mar 28 12:18:23 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 1m 0s
Best training loss: 0.000998

Thu Mar 28 13:02:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Thu Mar 28 13:03:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 1m 9s
Best training loss: 0.000996

Thu Mar 28 13:04:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:05:43 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:05:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:06:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 39s
Best training loss: 0.000992

Thu Mar 28 13:11:57 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:13:02 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:14:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:14:24 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:14:32 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:14:49 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:15:52 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:16:00 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:16:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:16:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:17:28 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:18:08 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:18:32 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:19:59 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:20:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:20:34 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:20:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:22:30 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:23:12 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:23:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Thu Mar 28 13:23:59 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Thu Mar 28 13:25:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:25:28 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:30:29 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 48s
Best training loss: 0.000996

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 13:31:29 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 1m 19s
Best training loss: 0.000984

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 13:33:53 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 13:35:21 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 1m 30s
Best training loss: 0.000991

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 13:55:46 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 13:58:27 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 13:58:41 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 14:02:21 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 14:02:29 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 14:39:00 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 14:39:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 14:39:16 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 14:42:41 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 14:43:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 14:43:35 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 14:43:42 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 14:44:04 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 14:44:18 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 14:45:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 14:46:28 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 14:46:49 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 14:46:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 14:47:20 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 14:48:25 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 22s
Thu Mar 28 14:49:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 14:49:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)


Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 14:50:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)


Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 14:51:37 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)


Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 14:54:19 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 3s
Best training loss: 0.009660

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 14:55:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 14:56:08 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 14:56:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 14:57:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 14:58:09 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 14:58:19 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 57s
Best training loss: 0.000995

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 15:07:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 15:07:30 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 15:07:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 15:07:46 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 15:09:23 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 15:43:36 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 15:43:49 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 15:43:58 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 15:44:09 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 15:44:35 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 15:44:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 15:45:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 15:46:12 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 15:48:32 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 15:48:52 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 15:49:02 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 15:50:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 15:51:02 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 15:51:12 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 15:51:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 15:51:18 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 15:53:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 15:58:10 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 1m 14s
Best training loss: 0.000974

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 28 16:01:05 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 0.002799

Thu Mar 28 16:02:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 14s
Best training loss: 0.003596

Thu Mar 28 16:03:12 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 0.002289

Thu Mar 28 16:03:33 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 0.003842

Thu Mar 28 16:03:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 14s
Best training loss: 0.003243

Thu Mar 28 16:04:46 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 16:05:34 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 16:06:39 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 39s
Best training loss: 0.003073

Thu Mar 28 16:07:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 16:07:45 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 1m 3s
Best training loss: 0.002999


Training complete in 1m 3s
Best training loss: 0.002747

Thu Mar 28 16:11:07 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 37s
Best training loss: 0.002480

Thu Mar 28 16:21:43 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 16:22:21 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 12
    max_iter: 10
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 1m 25s
Best training loss: 0.000994

Thu Mar 28 16:24:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 6
    max_iter: 5
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 1m 51s
Best training loss: 0.000994

Thu Mar 28 16:26:58 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 1m 17s
Best training loss: 0.000999

Thu Mar 28 16:28:58 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 1m 21s
Best training loss: 0.001000

Thu Mar 28 16:30:53 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 16:33:26 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 2
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 16:33:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 3
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 16:33:58 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 2
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 16:34:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.8
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 1m 59s
Best training loss: 0.000984

Thu Mar 28 16:42:23 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 28 16:42:37 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.8
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 14s
Best training loss: 0.020436

Thu Mar 28 16:43:02 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.1
    momentum: 0.8
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 16:43:10 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0.8
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 14s
Best training loss: 0.061619

Thu Mar 28 16:43:28 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0.8
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 7 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 16:43:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0.8
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 16:43:43 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0.8
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 16:43:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.8
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 16:44:07 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 16:44:22 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 14s
Best training loss: 0.025902

Thu Mar 28 16:45:05 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 16s
Best training loss: 0.036281

Thu Mar 28 16:50:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 16:50:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 2s
Best training loss: 0.050224

Thu Mar 28 16:52:16 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 0.067851

Thu Mar 28 16:52:35 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 200 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 0.015888

Thu Mar 28 17:10:30 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 17:12:02 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 1m 28s
Best training loss: 0.000997

Thu Mar 28 17:17:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 17:17:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=5, bias=True)
        (3): Dense(in_features=5, out_features=5, bias=True)
        (4): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=5, bias=True)
        (3): Dense(in_features=5, out_features=5, bias=True)
        (4): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 17:18:08 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 17:18:39 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=3, bias=True)
        (1): Dense(in_features=3, out_features=3, bias=True)
        (2): Dense(in_features=3, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=3, bias=True)
        (1): Dense(in_features=3, out_features=3, bias=True)
        (2): Dense(in_features=3, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 17:53:28 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 FullBatchLBFGS (
Parameter Group 0
    debug: False
    dtype: torch.float32
    history_size: 10
    line_search: Wolfe
    lr: 1
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 17:56:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 FullBatchLBFGS (
Parameter Group 0
    debug: False
    dtype: torch.float32
    history_size: 10
    line_search: Wolfe
    lr: 1
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 28 17:59:35 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 FullBatchLBFGS (
Parameter Group 0
    debug: False
    dtype: torch.float32
    history_size: 10
    line_search: Wolfe
    lr: 1
)
Number of Epochs = 20

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

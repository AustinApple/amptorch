Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 36s
Best validation loss: 0.278247

Tue Mar 12 14:02:33 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.01
    lr: 1e-06
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Wed Mar 13 09:24:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 25s
Best validation loss: 0.248037

Wed Mar 13 12:30:53 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 12:32:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 12:32:27 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 12:33:19 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 12:33:37 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 12:35:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 12:36:29 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 12:39:09 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Wed Mar 13 12:42:43 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Wed Mar 13 12:42:53 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Wed Mar 13 12:45:34 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 19s
Best validation loss: 0.242311

Wed Mar 13 12:46:10 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 1
Wed Mar 13 12:46:34 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Wed Mar 13 12:47:12 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 12:47:19 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 12:47:29 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 12:48:40 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 12:49:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 12:50:53 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 12:56:09 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 13:00:37 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Wed Mar 13 13:00:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Wed Mar 13 13:01:24 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Wed Mar 13 13:04:08 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Wed Mar 13 13:04:21 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Wed Mar 13 13:05:37 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Wed Mar 13 13:07:10 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 13:08:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 13:08:24 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 13:11:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 13 13:12:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 13 13:13:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 13 13:15:21 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Wed Mar 13 13:17:31 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 13 13:17:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 13 13:18:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 13 13:19:19 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 13 13:19:30 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 13 13:20:12 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 13 13:20:44 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 13 13:21:41 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 13 13:21:58 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Wed Mar 13 13:22:06 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Wed Mar 13 13:22:33 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Wed Mar 13 13:23:01 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Wed Mar 13 13:25:00 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 56s
Best validation loss: 1.173915

Wed Mar 13 13:26:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 19s
Best validation loss: 0.299970

Wed Mar 13 13:30:36 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 17s
Best validation loss: 0.267959

Wed Mar 13 13:32:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 22s
Best validation loss: 0.255150

Wed Mar 13 13:33:39 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 20s
Best validation loss: 0.267535

Wed Mar 13 13:59:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Training Data = 360 Validation Data = 40
Batch Size = 100
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 20s
Best validation loss: 0.279621

Wed Mar 13 14:00:53 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Wed Mar 13 14:01:02 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Wed Mar 13 14:02:22 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Wed Mar 13 14:11:40 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Wed Mar 13 14:12:01 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Wed Mar 13 14:12:32 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 360 Validation Data = 40
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 13 14:12:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 360 Validation Data = 40
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 19s
Best validation loss: 0.298865

Wed Mar 13 14:13:20 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 13 14:14:02 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Wed Mar 13 14:14:24 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 19s
Best validation loss: 0.178940

Wed Mar 13 14:19:45 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 17s
Best training/validation loss: 0.178928

Wed Mar 13 14:21:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 360 Validation Data = 40
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 21s
Best training/validation loss: 0.243105

Wed Mar 13 14:24:08 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 360 Validation Data = 40
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 23s
Best validation loss: 0.294810

Wed Mar 13 14:24:40 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 23s
Best training loss: 0.178941

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = None
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Thu Mar 14 10:46:23 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 17s
Best training loss: 0.178942

Thu Mar 14 10:47:46 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 17s
Best training loss: 0.178943

Thu Mar 14 10:51:00 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:51:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:51:21 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:54:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:54:23 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:54:27 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:54:29 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:55:34 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 5
Training Data = 400
Thu Mar 14 10:55:52 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 5
Training Data = 400
Thu Mar 14 10:56:09 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 5
Training Data = 400
Thu Mar 14 10:58:52 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:59:02 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:59:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:59:18 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:59:20 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:59:22 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:59:24 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:59:26 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:59:27 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:59:29 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:59:31 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 10:59:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Thu Mar 14 11:00:00 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 11:00:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 11:00:05 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 11:00:07 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Thu Mar 14 11:21:52 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Thu Mar 14 11:21:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Thu Mar 14 11:21:57 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Thu Mar 14 11:22:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Thu Mar 14 11:22:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 18s
Best training loss: 0.363793

Thu Mar 14 11:23:52 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 17s
Best training loss: 0.178931

Thu Mar 14 11:34:23 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 18s
Best training loss: 0.178935

Thu Mar 14 11:40:01 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 17s
Best training loss: 0.178658

Thu Mar 14 11:41:45 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 17s
Best training loss: 0.178943

Thu Mar 14 11:52:02 2019
Thu Mar 14 12:55:14 2019
Thu Mar 14 13:04:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: DataParallel(
  (module): FullNN(
    (elementwise_models): ModuleList(
      (0): MLP(
        (model_net): Sequential(
          (0): Dense(in_features=20, out_features=5, bias=True)
          (1): Dense(in_features=5, out_features=5, bias=True)
          (2): Dense(in_features=5, out_features=1, bias=True)
        )
      )
      (1): MLP(
        (model_net): Sequential(
          (0): Dense(in_features=20, out_features=5, bias=True)
          (1): Dense(in_features=5, out_features=5, bias=True)
          (2): Dense(in_features=5, out_features=1, bias=True)
        )
      )
    )
  )
)

Training complete in 0m 14s
Best training loss: 0.178938

Thu Mar 14 13:06:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: DataParallel(
  (module): FullNN(
    (elementwise_models): ModuleList(
      (0): MLP(
        (model_net): Sequential(
          (0): Dense(in_features=20, out_features=5, bias=True)
          (1): Dense(in_features=5, out_features=5, bias=True)
          (2): Dense(in_features=5, out_features=1, bias=True)
        )
      )
      (1): MLP(
        (model_net): Sequential(
          (0): Dense(in_features=20, out_features=5, bias=True)
          (1): Dense(in_features=5, out_features=5, bias=True)
          (2): Dense(in_features=5, out_features=1, bias=True)
        )
      )
    )
  )
)

Training complete in 0m 14s
Best training loss: 0.178929

Thu Mar 14 13:07:18 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: DataParallel(
  (module): FullNN(
    (elementwise_models): ModuleList(
      (0): MLP(
        (model_net): Sequential(
          (0): Dense(in_features=20, out_features=5, bias=True)
          (1): Dense(in_features=5, out_features=5, bias=True)
          (2): Dense(in_features=5, out_features=1, bias=True)
        )
      )
      (1): MLP(
        (model_net): Sequential(
          (0): Dense(in_features=20, out_features=5, bias=True)
          (1): Dense(in_features=5, out_features=5, bias=True)
          (2): Dense(in_features=5, out_features=1, bias=True)
        )
      )
    )
  )
)
Thu Mar 14 13:07:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: DataParallel(
  (module): FullNN(
    (elementwise_models): ModuleList(
      (0): MLP(
        (model_net): Sequential(
          (0): Dense(in_features=20, out_features=5, bias=True)
          (1): Dense(in_features=5, out_features=5, bias=True)
          (2): Dense(in_features=5, out_features=1, bias=True)
        )
      )
      (1): MLP(
        (model_net): Sequential(
          (0): Dense(in_features=20, out_features=5, bias=True)
          (1): Dense(in_features=5, out_features=5, bias=True)
          (2): Dense(in_features=5, out_features=1, bias=True)
        )
      )
    )
  )
)

Training complete in 0m 14s
Best training loss: 0.178942

Thu Mar 14 13:11:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: DataParallel(
  (module): FullNN(
    (elementwise_models): ModuleList(
      (0): MLP(
        (model_net): Sequential(
          (0): Dense(in_features=20, out_features=5, bias=True)
          (1): Dense(in_features=5, out_features=5, bias=True)
          (2): Dense(in_features=5, out_features=1, bias=True)
        )
      )
      (1): MLP(
        (model_net): Sequential(
          (0): Dense(in_features=20, out_features=5, bias=True)
          (1): Dense(in_features=5, out_features=5, bias=True)
          (2): Dense(in_features=5, out_features=1, bias=True)
        )
      )
    )
  )
)
Thu Mar 14 13:14:33 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Thu Mar 14 13:15:30 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 12s
Best training loss: 0.178933

Fri Mar 15 10:06:49 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 19s
Best training loss: 100000000.000000

Fri Mar 15 10:08:46 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 20s
Best training loss: 100000000.000000

Fri Mar 15 10:11:57 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 19s
Best training loss: 0.178941

Fri Mar 15 10:16:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Fri Mar 15 10:20:02 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 19s
Best training loss: 100000000.000000

Fri Mar 15 10:20:36 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 21s
Best training loss: 102.916696

Fri Mar 15 10:22:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 17s
Best training loss: 78.089620

Fri Mar 15 10:22:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.0001
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 21s
Best training loss: 4348354.137459

Fri Mar 15 10:26:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 20s
Best training loss: 100000000.000000

Fri Mar 15 10:27:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 21s
Best training loss: 100000000.000000

Fri Mar 15 10:32:07 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 20s
Best training loss: 0.178942

Fri Mar 15 10:34:02 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 18s
Best training loss: 0.178942

Fri Mar 15 10:57:04 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Fri Mar 15 10:57:42 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Fri Mar 15 10:57:49 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Fri Mar 15 11:10:22 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Fri Mar 15 11:11:33 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Fri Mar 15 11:12:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Fri Mar 15 11:37:20 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Fri Mar 15 11:42:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Fri Mar 15 11:43:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Fri Mar 15 11:44:21 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Fri Mar 15 11:50:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Fri Mar 15 11:51:12 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Fri Mar 15 11:51:30 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Fri Mar 15 11:51:45 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 25s
Best training loss: 0.179039

Fri Mar 15 11:54:44 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 24s
Best training loss: 100000000.000000

Fri Mar 15 11:56:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 35s
Best training loss: 100000000.000000

Sun Mar 17 13:42:32 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 34s
Best training loss: 100000000.000000

Sun Mar 17 13:45:42 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 13:46:08 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Sun Mar 17 13:46:46 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 21s
Best training loss: 0.700433

Sun Mar 17 13:48:06 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 13:48:16 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 22s
Best training loss: 0.264740

Sun Mar 17 13:49:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 21s
Best training loss: 0.178939

Sun Mar 17 14:04:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:07:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:07:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:08:26 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:09:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:09:53 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:10:20 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:11:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:11:57 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:13:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:17:41 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:18:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:26:45 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:27:27 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 1m 0s
Best training loss: 1.265394

Sun Mar 17 14:28:58 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:29:53 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 20s
Best training loss: 0.178772

Sun Mar 17 14:30:36 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:31:04 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:36:37 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 24s
Best training loss: 100000000.000000

Sun Mar 17 14:38:07 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:38:22 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.8
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:40:24 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:40:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:42:21 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:43:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:45:05 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:45:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:46:23 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:46:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 19s
Best training loss: 0.026902

Sun Mar 17 14:47:32 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:48:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:48:45 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 21s
Best training loss: 0.027011

Sun Mar 17 14:49:35 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:49:46 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:50:12 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 20s
Best training loss: 0.000829

Sun Mar 17 14:51:22 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:51:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 19s
Best training loss: 0.178942

Sun Mar 17 14:52:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:52:28 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:52:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:55:40 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:56:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.8
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:56:39 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:56:57 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.8
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:57:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.8
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:58:34 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.8
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 14:59:11 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.8
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 15:00:11 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.8
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 15:01:05 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 15:01:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 15:02:10 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 15:03:00 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.01
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Sun Mar 17 15:03:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 2m 34s
Best training loss: 100000000.000000

Mon Mar 18 11:10:05 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 25s
Best training loss: 100000000.000000

Mon Mar 18 11:11:00 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 11:11:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 11:13:00 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 23s
Best training loss: 0.089471

Mon Mar 18 11:14:46 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 40s
Best training loss: 0.089471

Mon Mar 18 11:16:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.01
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 2m 12s
Best training loss: 0.089471

Mon Mar 18 11:39:43 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 11:42:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 11:43:00 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 11:44:37 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 27s
Best training loss: 1.793076

Mon Mar 18 11:45:28 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 23s
Best training loss: 1.789418

Mon Mar 18 11:46:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 11:47:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 11:47:16 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 11:47:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 11:53:18 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 14s
Best training loss: 74.287966

Mon Mar 18 11:54:42 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 14s
Best training loss: 0.178196

Mon Mar 18 11:55:19 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 14s
Best training loss: 1.786437

Mon Mar 18 12:01:16 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Mon Mar 18 12:14:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 15:15:49 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 24s
Best training loss: 1.789418

Mon Mar 18 15:16:42 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 15:18:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 14s
Best training loss: 1.789401

Mon Mar 18 15:19:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 14s
Best training loss: 9.923996

Mon Mar 18 15:19:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 15:20:01 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 15:55:24 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Mon Mar 18 16:01:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Mon Mar 18 16:05:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Mon Mar 18 16:06:00 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Mon Mar 18 16:06:18 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Mon Mar 18 16:06:29 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Mon Mar 18 16:07:49 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Mon Mar 18 16:08:16 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Mon Mar 18 16:08:29 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Mon Mar 18 16:11:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Mon Mar 18 16:11:31 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:12:23 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:12:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:13:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:13:34 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 1.330373

Mon Mar 18 16:13:49 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 4
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 5.931864

Mon Mar 18 16:14:01 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 3
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:15:34 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 1.237850

Mon Mar 18 16:16:00 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Mon Mar 18 16:19:00 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Mon Mar 18 16:19:54 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Mon Mar 18 16:20:23 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 1.330626

Mon Mar 18 16:20:44 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 1.166560

Mon Mar 18 16:21:11 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:22:10 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:22:22 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 4
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:24:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 4
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:25:10 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:25:31 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Mon Mar 18 16:25:39 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Mon Mar 18 16:29:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Mon Mar 18 16:29:58 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Mon Mar 18 16:30:16 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:30:35 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:30:58 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Mon Mar 18 16:31:40 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Mon Mar 18 16:32:33 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:33:26 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:33:45 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:33:58 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:34:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 1.355364

Mon Mar 18 16:34:31 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:37:16 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:37:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:37:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:38:06 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 3
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:38:30 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 3
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:38:44 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:38:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:39:06 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 3
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:43:52 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 3
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 16:44:25 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 3
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.293374

Mon Mar 18 16:44:54 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 1000

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 4s
Best training loss: 1.267170

Mon Mar 18 17:32:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 1
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 14.116211

Mon Mar 18 17:33:33 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 1
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 18.931641

Mon Mar 18 17:34:04 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 1
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 2.524658

Mon Mar 18 17:36:44 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.255244

Mon Mar 18 17:36:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.416777

Mon Mar 18 17:36:57 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.414966

Mon Mar 18 17:47:32 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.410653

Mon Mar 18 17:47:41 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.235435

Mon Mar 18 17:53:18 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 17:53:41 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 17:53:59 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 17:54:10 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 17:54:53 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 17:55:40 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 0.233511

Mon Mar 18 17:55:49 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 17:56:42 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 17:57:07 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 17:57:54 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 17:58:01 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 18:05:28 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Mon Mar 18 18:05:35 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 18:08:30 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 18:09:05 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 1.789394

Mon Mar 18 18:11:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 1.789320

Mon Mar 18 18:11:37 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 18:13:06 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 14s
Best training loss: 6.058516

Mon Mar 18 18:13:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0.9
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 1.792634

Mon Mar 18 18:14:08 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.1
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 18:14:12 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.1
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 18:14:26 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 1.789419

Mon Mar 18 18:29:53 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 1.789420

Mon Mar 18 18:30:21 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 18:30:30 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 1.789420

Mon Mar 18 18:31:45 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 12s
Best training loss: 1.789418

Mon Mar 18 18:32:52 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 1.789419

Mon Mar 18 18:34:20 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 1.789419

Mon Mar 18 18:35:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 1.789419

Mon Mar 18 18:37:36 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 12s
Best training loss: 1.789420

Mon Mar 18 18:39:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 12s
Best training loss: 1.789418

Mon Mar 18 18:39:41 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 1.789419

Mon Mar 18 18:41:28 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 18:41:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Mon Mar 18 18:42:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Mon Mar 18 18:42:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 12s
Best training loss: 1.789418

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Mon Mar 18 18:43:18 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 12s
Best training loss: 1.789418

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Mon Mar 18 18:43:52 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Mon Mar 18 18:44:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 12s
Best training loss: 1.789419

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Mon Mar 18 18:44:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Mon Mar 18 18:45:19 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Mon Mar 18 18:45:22 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Mon Mar 18 18:45:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Mon Mar 18 18:48:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Mon Mar 18 18:49:00 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Mon Mar 18 18:49:04 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Mon Mar 18 18:49:18 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Mon Mar 18 18:50:29 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.326904

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Tue Mar 19 10:17:19 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Tue Mar 19 10:18:05 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Tue Mar 19 10:26:58 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 1
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.000000

Tue Mar 19 10:27:10 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 1
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.000000

Tue Mar 19 10:27:32 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 1
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.000000

Tue Mar 19 10:28:06 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.327417

Tue Mar 19 10:28:19 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.327313

Tue Mar 19 10:28:39 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.327313

Tue Mar 19 10:29:52 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Tue Mar 19 10:30:01 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Tue Mar 19 10:30:44 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Tue Mar 19 10:30:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Tue Mar 19 10:31:06 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.326904

Tue Mar 19 10:34:24 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Tue Mar 19 10:35:08 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Tue Mar 19 10:37:16 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Tue Mar 19 10:38:29 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Tue Mar 19 10:38:41 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.326904

Tue Mar 19 10:38:54 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.327326

Tue Mar 19 10:42:09 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.326904

Tue Mar 19 10:42:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
LR Scheduler Info: 
 Step Size = 20 
 Gamma = 0.1
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.326904

Tue Mar 19 10:44:28 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Tue Mar 19 10:44:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.326904

Tue Mar 19 10:45:04 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.326904

Tue Mar 19 10:49:53 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.326904

Tue Mar 19 10:50:25 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 10:51:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.326904

Tue Mar 19 10:58:36 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 10:58:58 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 10:59:26 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 10:59:30 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 10:59:54 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.326904

Tue Mar 19 11:00:11 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 11:00:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 11:06:01 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.326904

Tue Mar 19 11:06:26 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 11:06:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 11:07:16 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.326904

Tue Mar 19 11:08:22 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 0.326904

Tue Mar 19 11:08:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.155367

Tue Mar 19 11:09:05 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.155367

Tue Mar 19 11:09:43 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 10

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.155367

Tue Mar 19 11:09:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.326904

Tue Mar 19 11:10:02 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.326904

Tue Mar 19 11:10:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.326904

Tue Mar 19 11:11:39 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 2
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.326904

Tue Mar 19 11:15:12 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.350827

Tue Mar 19 11:25:27 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=3, bias=True)
        (1): Dense(in_features=3, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=3, bias=True)
        (1): Dense(in_features=3, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.225609

Tue Mar 19 11:25:32 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=3, bias=True)
        (1): Dense(in_features=3, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=3, bias=True)
        (1): Dense(in_features=3, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.225609

Tue Mar 19 11:25:45 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=3, bias=True)
        (1): Dense(in_features=3, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=3, bias=True)
        (1): Dense(in_features=3, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.225609

Tue Mar 19 11:26:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=3, bias=True)
        (1): Dense(in_features=3, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=3, bias=True)
        (1): Dense(in_features=3, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.225609

Tue Mar 19 11:36:57 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1979.357535

Tue Mar 19 11:37:29 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1850.917543

Tue Mar 19 11:37:53 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.LeakyReLU'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1565.282323

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = None
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Tue Mar 19 12:50:36 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.350933

Tue Mar 19 12:50:46 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.350933

Tue Mar 19 12:53:16 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 13:04:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 13:06:43 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.500015

Tue Mar 19 13:06:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.500015

Tue Mar 19 13:07:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.500015

Tue Mar 19 13:23:32 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 121.786582

Tue Mar 19 13:24:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 100.215393

Tue Mar 19 13:24:16 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 1000

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 2s
Best training loss: 16.313642

Tue Mar 19 13:24:26 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 10000

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 23s
Best training loss: 0.758635

Tue Mar 19 13:25:45 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 10000

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
        (1): Dense(in_features=1, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
        (1): Dense(in_features=1, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 13:26:27 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 10000

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 23s
Best training loss: 0.758635

Tue Mar 19 13:27:39 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 1000

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 2m 5s
Best training loss: 8.735024

Tue Mar 19 13:30:22 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.1
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 1000

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 13:31:08 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100000

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 13:46:54 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
        (1): Dense(in_features=1, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
        (1): Dense(in_features=1, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 13:47:41 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
        (1): Dense(in_features=1, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
        (1): Dense(in_features=1, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 13:51:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
        (1): Dense(in_features=1, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=1, bias=True)
        (1): Dense(in_features=1, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 18s
Best training loss: 1.792974

Tue Mar 19 13:53:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 13:54:05 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 14:28:33 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Tue Mar 19 14:28:42 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Tue Mar 19 14:28:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Tue Mar 19 14:29:12 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Tue Mar 19 14:32:31 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Tue Mar 19 14:34:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:43:27 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:44:13 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:44:23 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:44:37 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:44:44 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:46:39 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:46:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:47:19 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:47:26 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:48:49 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:50:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:50:20 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Tue Mar 19 14:54:18 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:54:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:55:07 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:55:27 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:56:49 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 14:59:09 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:01:01 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:01:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:01:45 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:01:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:02:16 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:02:40 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:03:42 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:04:10 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:05:54 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:08:01 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:08:59 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:10:08 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:10:35 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:12:27 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:12:33 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:12:35 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:13:42 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:15:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:15:55 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:16:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:16:24 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:17:30 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:17:52 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:18:46 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:19:00 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:20:05 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:22:46 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:23:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:25:56 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.228888

Tue Mar 19 15:26:10 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.228770

Tue Mar 19 15:26:40 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 15:28:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 15:36:06 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.228770

Tue Mar 19 15:39:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Tue Mar 19 15:39:39 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Tue Mar 19 15:41:27 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Tue Mar 19 15:42:07 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 15:42:58 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.225721

Tue Mar 19 15:43:07 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 10.335943

Tue Mar 19 15:43:19 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.228069

Tue Mar 19 15:43:26 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.228254

Tue Mar 19 15:43:33 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 4.737287

Tue Mar 19 15:43:39 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 0.897760

Tue Mar 19 15:43:47 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.203117

Tue Mar 19 15:43:54 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.228584

Tue Mar 19 15:44:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.228821

Tue Mar 19 15:44:25 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.228718

Tue Mar 19 15:45:16 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.228770

Tue Mar 19 15:50:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 30

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 0s
Best training loss: 1.469007

Tue Mar 19 15:51:10 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 1.228718

Tue Mar 19 15:51:19 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 1.058522

Tue Mar 19 15:51:26 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 1.226201

Tue Mar 19 15:51:33 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 1.205793

Tue Mar 19 15:51:48 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=2, bias=True)
        (1): Dense(in_features=2, out_features=2, bias=True)
        (2): Dense(in_features=2, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 1.228817

Tue Mar 19 16:12:51 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: L1Loss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 44.360122

Tue Mar 19 16:13:02 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 1
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: L1Loss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 1s
Best training loss: 44.392733

Tue Mar 19 16:13:58 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: L1Loss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 44.327556

Tue Mar 19 16:14:41 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: L1Loss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 44.326935

Tue Mar 19 16:15:09 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: L1Loss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.1
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 16:15:28 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: L1Loss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.1
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 1000

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 16:17:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.1
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 16:17:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 16:17:33 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 1000

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 16:19:04 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 16:19:11 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 16:19:20 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 1.790416

Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Tue Mar 19 17:34:04 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 13s
Best training loss: 1.790410

Tue Mar 19 17:45:27 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 17:46:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 17:48:41 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 17:50:23 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 17:50:28 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 100
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 17:51:10 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 17:51:30 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 17:54:11 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 17:54:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 17:55:03 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 17:55:18 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 17:55:38 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 17:55:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 2
Training Data = 4
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.001
    momentum: 0
    nesterov: False
    weight_decay: 0
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:02:53 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 23s
Best training loss: 1.789418

Tue Mar 19 18:03:57 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:04:14 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:04:25 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.8
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 23s
Best training loss: 1.789418

Tue Mar 19 18:05:22 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:05:39 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.01
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 2m 17s
Best training loss: 1.789492

Tue Mar 19 18:14:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.01
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 3

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:14:44 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.01
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 3

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:14:50 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.01
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 3

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 5s
Best training loss: 1399.117222

Tue Mar 19 18:15:09 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.01
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 3

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 5s
Best training loss: 1399.567389

Tue Mar 19 18:16:04 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.01
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 3

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 5s
Best training loss: 1399.058523

Tue Mar 19 18:30:08 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.01
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 3

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)

Training complete in 0m 5s
Best training loss: 1156.221000

Tue Mar 19 18:33:24 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.01
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 3

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:33:45 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.01
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:33:57 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.01
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:34:16 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:35:09 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.1
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:35:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.5
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:35:53 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.5
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:36:15 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.5
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:36:25 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.5
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:38:42 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.5
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:38:59 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Softplus'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.5
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:41:17 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.5
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:45:30 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.5
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:49:24 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.5
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
Tue Mar 19 18:50:21 2019
--------------------------------------------------
Filename: benchmark_dataset/water.extxyz
Batch Size = 400
Training Data = 400
Activation Function = <class 'torch.nn.modules.activation.Tanh'>
Loss Function: MSELoss()
Optimizer Info:
 LBFGS (
Parameter Group 0
    history_size: 100
    line_search_fn: None
    lr: 0.8
    max_eval: 25
    max_iter: 20
    tolerance_change: 1e-09
    tolerance_grad: 1e-05
)
Number of Epochs = 100

Model: FullNN(
  (elementwise_models): ModuleList(
    (0): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
    (1): MLP(
      (model_net): Sequential(
        (0): Dense(in_features=20, out_features=5, bias=True)
        (1): Dense(in_features=5, out_features=5, bias=True)
        (2): Dense(in_features=5, out_features=1, bias=True)
      )
    )
  )
)
